// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package musicdiscs.web;

import java.lang.String;
import musicdiscs.domain.Album;
import musicdiscs.domain.Artist;
import musicdiscs.domain.Track;
import org.springframework.core.convert.converter.Converter;
import org.springframework.format.FormatterRegistry;

privileged aspect ApplicationConversionServiceFactoryBean_Roo_ConversionService {
    
    Converter<Album, String> ApplicationConversionServiceFactoryBean.getAlbumConverter() {
        return new Converter<Album, String>() {
            public String convert(Album album) {
                return new StringBuilder().append(album.getTitle()).append(" ").append(album.getAlbumType()).append(" ").append(album.getReleased()).append(" ").append(album.getLength()).toString();
            }
        };
    }
    
    org.springframework.core.convert.converter.Converter<Artist, String> ApplicationConversionServiceFactoryBean.getArtistConverter() {
        return new org.springframework.core.convert.converter.Converter<Artist, String>() {
            public String convert(Artist artist) {
                return new StringBuilder().append(artist.getName()).append(" ").append(artist.getOrigin()).toString();
            }
        };
    }
    
    org.springframework.core.convert.converter.Converter<Track, String> ApplicationConversionServiceFactoryBean.getTrackConverter() {
        return new org.springframework.core.convert.converter.Converter<Track, String>() {
            public String convert(Track track) {
                return new StringBuilder().append(track.getTitle()).append(" ").append(track.getLength()).append(" ").append(track.getWriter()).append(" ").append(track.getNr()).toString();
            }
        };
    }
    
    public void ApplicationConversionServiceFactoryBean.installLabelConverters(FormatterRegistry registry) {
        registry.addConverter(getAlbumConverter());
        registry.addConverter(getArtistConverter());
        registry.addConverter(getTrackConverter());
    }
    
    public void ApplicationConversionServiceFactoryBean.afterPropertiesSet() {
        super.afterPropertiesSet();
        installLabelConverters(getObject());
    }
    
}
