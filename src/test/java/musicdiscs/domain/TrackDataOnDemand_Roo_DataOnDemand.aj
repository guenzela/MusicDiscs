// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package musicdiscs.domain;

import java.util.List;
import java.util.Random;
import musicdiscs.domain.Track;
import org.springframework.stereotype.Component;

privileged aspect TrackDataOnDemand_Roo_DataOnDemand {
    
    declare @type: TrackDataOnDemand: @Component;
    
    private Random TrackDataOnDemand.rnd = new java.security.SecureRandom();
    
    private List<Track> TrackDataOnDemand.data;
    
    public Track TrackDataOnDemand.getNewTransientTrack(int index) {
        musicdiscs.domain.Track obj = new musicdiscs.domain.Track();
        obj.setTitle("title_" + index);
        obj.setLength(new Integer(index).floatValue());
        obj.setWriter("writer_" + index);
        obj.setNr(new Integer(index));
        return obj;
    }
    
    public Track TrackDataOnDemand.getSpecificTrack(int index) {
        init();
        if (index < 0) index = 0;
        if (index > (data.size() - 1)) index = data.size() - 1;
        Track obj = data.get(index);
        return Track.findTrack(obj.getId());
    }
    
    public Track TrackDataOnDemand.getRandomTrack() {
        init();
        Track obj = data.get(rnd.nextInt(data.size()));
        return Track.findTrack(obj.getId());
    }
    
    public boolean TrackDataOnDemand.modifyTrack(Track obj) {
        return false;
    }
    
    public void TrackDataOnDemand.init() {
        data = musicdiscs.domain.Track.findTrackEntries(0, 10);
        if (data == null) throw new IllegalStateException("Find entries implementation for 'Track' illegally returned null");
        if (!data.isEmpty()) {
            return;
        }
        
        data = new java.util.ArrayList<musicdiscs.domain.Track>();
        for (int i = 0; i < 10; i++) {
            musicdiscs.domain.Track obj = getNewTransientTrack(i);
            obj.persist();
            obj.flush();
            data.add(obj);
        }
    }
    
}
